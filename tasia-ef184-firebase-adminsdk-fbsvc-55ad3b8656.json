'use server';

import admin from 'firebase-admin';
import algoliasearch from 'algoliasearch';
import process from 'process';

// --- Configuration ---
const ALGOLIA_APP_ID = process***REMOVED***.NEXT_PUBLIC_ALGOLIA_APP_ID!;
const ALGOLIA_ADMIN_KEY = process***REMOVED***.ALGOLIA_ADMIN_API_KEY!;
const ALGOLIA_INDEX_NAME = process***REMOVED***.NEXT_PUBLIC_ALGOLIA_INDEX_NAME!;
const FIRESTORE_COLLECTION_NAME = 'tsia-complex-entities';

// --- Initialization ---

// Hardcoded service account details provided by the user.
const serviceAccount = {
  "type": "service_account",
  "project_id": "tasia-6f77i",
  "private_key_id": "4bd19b17936f3fadbe29c47c8f494c0b24921599",
  "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCWmXT5WiMtLte/\nswJp9KF4ofKwowXwDSzF3OjfjAir6ZVAYGVvRklLYsxePNdqC7+nxMhGS008hRxp\nIuSASHCHcdFvLFA49AWSrIS/zU+wF3mDG2MTazgS/rDxK4NIsXVv9GDKbR79S4vJ\n5gwo7dWOylyNKqRUXoo3iexDPqs4Rk4zaY/zLgUWOJWISDV+8eipPFKGN48EZy7v\nH8tImNCScl7fs+5YC3FfgXEmhn65NJhhdXciRWGsqlOePhbbfFVrRrqf+x9dcYVx\n+dyGGxhP6UzXbbXQKOOH15DhlkCtr6GJLOfeLxTVpMocp3FaWRnTB2WxI5uZBUbL\nq3dSorLbAgMBAAECggEADStgOknyl4noHgBmbqOQ1z66PU4UP9i3GJpn1tylCXuE\nrLuBQ0jPMgNywa7qW4Cpgt9HcDY3i9pMELmXZ8xt4rpGSUWDwmc8cYYambc3h7uV\nyaxEbrdKkQaqrHxUn6+9CExDhpAiTJ4lnEM8vvuFWFZD36hh9GrMBW1PNtYtHN+O\nm/JgXVnUcvm/MKU0qZQvISDVuNUQm6Lb14Fw3PbFaiW8mnWFVXadZJjm7AqQbbYs\n1K1JD5TlmOcRW0CUmX2hAqrGBXLv1Pqp6RqX3IgqrAzgbbn36FMxEgKcy7dfQD8e\ntipERILwMTiVG791ZviSh0+xbM+vitr6rGSnAe+9MQKBgQDSswzc9YSo4PMl6RhA\neFVmfty4CR1bce7wxJTDg/eiXxXcSU2JQ0UO6QA2ZkBnR0E1dreQuWeZ+SJGakRx\nRrcJnxR2cuLYlCPyoyUsnG1jHgkCkBIGnrkPRP0L2QPHwEzHwKo4spAndMZ2QCKS\n/p0GL3jDmdEKgl0rAd5PENDtiQKBgQC2+n0dfqhuWj+qkV3oe73BZ0JleyV7rou9\n8urI8eVfpzoUyBEV7YNMNUY+JgJDNXEEW8tyUeh+I8zrjX7QDvnOCkvgMjvSHSAP\nch6SYXr/vP8ioU3xSmcOaV9rbFsg5qtOZvQgA9scL0up1csVA7FKAbXR6NEZZSl9\n9HIxTHZIQwKBgQCSfKGozZmZwCvMY67Uw9S8Gd9ipBOhDClPg5zaAdodLXaJXP1n\nPTm6EAxxxc1pAIU5onwlRoHc7vUBd8h16PBA5DTZ1S4Z3YTQoNSrm2YBz1P8UCX4\nLEoFb7Vuk0apjezTxAOUv7CxfeKtPBHNmO+a6U5Qz5QidlhIGlhxKAPZ4QKBgGgu\n2XwouLgUdLmmiUSs6A8tvxVO97mjWXeuz1XYvVQoQB7DB09n6+FBWBxcwd8Il6/2\noDEYR/tCYRQhfXnzfPJ+1FLz5zGsWavRu2x3SnRAZTiPhXSEe4cuIiFlEcH69MDw\nR8HO0DwNBdTOoRH3B0PvE1pQaHZALk7EFxzQv2xHAoGADCzJG9MXCaH5BB5WnGop\nJBPVWQi+wcVFgbucHnJ+oqT/GScxOgiMqYR8Klg7ta+ffYhGYJDU3MP96zKAgy0f\nixt4F1sKJLO31v2esiHee5nYdmPHolHPIciLxRh74HsgPyvr9kTrJr625JDPjMyC\nLebYeNN+JpnNbB/dmEQIZtY=\n-----END PRIVATE KEY-----\n".replace(/\\n/g, '\n'),
  "client_email": "firebase-adminsdk-fbsvc@tasia-6f77i.iam.gserviceaccount.com",
  "client_id": "108482490151079802788",
  "auth_uri": "https://accounts.google.com/o/oauth2/auth",
  "token_uri": "https://oauth2.googleapis.com/token",
  "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
  "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/firebase-adminsdk-fbsvc%40tasia-6f77i.iam.gserviceaccount.com",
  "universe_domain": "googleapis.com"
};


try {
    if (admin.apps.length === 0) {
        admin.initializeApp({
          credential: admin.credential.cert(serviceAccount),
          projectId: serviceAccount.project_id,
          databaseURL: `https://${serviceAccount.project_id}.firebaseio.com`
        });
    }
} catch (error) {
    console.error('Firebase Admin SDK initialization error:', (error as Error).message);
    process.exit(1);
}

const firestore = admin.firestore();

// Initialize Algolia Client
if (!ALGOLIA_APP_ID || !ALGOLIA_ADMIN_KEY || !ALGOLIA_INDEX_NAME) {
    console.error("Algolia environment variables are not set. Please check NEXT_PUBLIC_ALGOLIA_APP_ID, ALGOLIA_ADMIN_API_KEY, and NEXT_PUBLIC_ALGOLIA_INDEX_NAME.");
    process.exit(1);
}

const algoliaClient = algoliasearch(ALGOLIA_APP_ID, ALGOLIA_ADMIN_KEY);
const index = algoliaClient.initIndex(ALGOLIA_INDEX_NAME);

/**
 * Fetches all documents from a Firestore collection.
 * @returns {Promise<Array<object>>} A promise that resolves to an array of documents.
 */
async function getAllFirestoreDocuments() {
    if (!firestore || !admin.app().options.projectId) {
        throw new Error("Firestore Admin not initialized or project ID is missing.");
    }
    console.log(`Fetching all documents from '${FIRESTORE_COLLECTION_NAME}'...`);
    const snapshot = await firestore.collection(FIRESTORE_COLLECTION_NAME).get();
    
    const docs = snapshot.docs.map(doc => {
        const docData = doc.data();
        Object.keys(docData).forEach(key => {
            if (docData[key] instanceof admin.firestore.Timestamp) {
                docData[key] = docData[key].toDate().toISOString();
            }
        });
        return {
            objectID: doc.id,
            ...docData
        };
    });
    console.log(`Fetched ${docs.length} documents.`);
    return docs;
}

/**
 * Uploads all Firestore documents to the Algolia index.
 * This will overwrite any existing data in the index.
 */
async function syncAllData() {
    try {
        console.log("Firestore Project ID:", admin.app().options.projectId);
        const documents = await getAllFirestoreDocuments();
        
        if (documents.length === 0) {
            console.log('No documents to sync.');
            return;
        }

        console.log(`Syncing ${documents.length} documents to Algolia index '${ALGOLIA_INDEX_NAME}'...`);
        
        const { objectIDs } = await index.saveObjects(documents, {
            autoGenerateObjectIDIfNotExist: false
        });
        
        console.log(`Successfully synced ${objectIDs.length} documents to Algolia.`);

    } catch (error) {
        console.error('Error syncing data to Algolia:', error);
    }
}


// --- Manual Execution ---
async function runManualSync() {
    console.log('Running full manual sync...');
    await syncAllData();
}

runManualSync();