rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if the user is an admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Allow admins full access.
    // Allow authenticated users read-only access.
    match /{document=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin();
    }
    
    // Explicitly allow any authenticated user to create their own user document upon signup.
    // Prevent them from creating it with a role other than 'viewer', unless they are the first user.
    match /users/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId
                    && (resource.data.role == 'viewer' 
                        || (resource.data.role == 'admin' && !exists(/databases/$(database)/documents/users/$(userId))));
      
      // Allow admins to update anyone's role.
      allow update: if isAdmin();
    }
  }
}
